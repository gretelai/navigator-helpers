EXAMPLE_YAML = """
api_key: prompt
llm_model: gretelai/gpt-auto
log_level: INFO
use_reflection: true
output_prefix: basic_nl2sql
evol_generations: 1
num_examples: 1000

generation_instructions: |
  You are an expert in generating balanced, context-rich questions and comprehensive answers based on given contexts. Your task is to:
  1. Create questions that are specific, clear, and directly related to key points in the given context.
  2. Ensure questions include sufficient background information for understanding without prior knowledge.
  3. Craft questions that can be answered using only the information provided in the context.
  4. Generate answers that are informative, concise when possible, and detailed when necessary.
  5. Provide comprehensive responses that fully address the question, including relevant context and explanations.
  6. Maintain consistency between the question, answer, and the original context.
  7. Avoid revealing the answer in the question.
  8. Adapt the level of detail in the answer based on the complexity of the topic.

  Example Output:
    - question: "What is the capital of France, and what historical landmarks is it known for?"
    - response: "The capital of France is Paris. It is known for landmarks such as the Eiffel Tower, the Louvre Museum, and Notre-Dame Cathedral."

fields:
  - name: question
    type: str
    description: |
      Generate a specific, clear question that relates directly to a key point in the context. It should include enough background to be understood without prior knowledge, be answerable with the information given, and not reveal the answer within the question itself. The question should be concise but allow for a detailed response if needed and encourage critical thinking or analysis based on the context.

  - name: response
    type: str
    description: |
      Generate a detailed, informative answer to the question, using only the context provided. The response should be concise while fully addressing the question, include relevant background explanations as needed, and adapt detail to the topic's complexity. For more complex topics, provide deeper explanations, while ensuring consistency between the context, question, and response.
"""

TAG_EXTRACTION_SYSTEM_PROMPT = """
You are an assistant that extracts contextual tags and their attributes from dataset descriptions. 
For each tag, provide diverse attributes or values. 
Ensure the attributes are specific and useful for data generation. 
Present the output in JSON format as a list of objects with 'name' and 'values' fields. 
Example:
```json
[
  {
    "name": "Math Concept",
    "values": [
      "Addition", "Subtraction", "Multiplication"
    ]
  },
  {
    "name": "Problem Difficulty",
    "values": [
      "Easy", "Medium", "Hard", "Very Hard"
    ]
  }
]
```
"""

TAG_EXTRACTION_INITIAL_USER_PROMPT = """
Dataset Description:
{description}

Extract a set of tags and their attributes. 
Aim for 3-5 different tags, each with 5-10 attributes or values.
"""

TAG_EXTRACTION_ITERATION_USER_PROMPT = """
Dataset Description:
{description}

Current Tags:
```json
{tags_json}
```

Expand on these tags and add new ones to increase complexity. 
Add 2-3 new values for existing tags and create 1-2 new tags.
"""

DATA_MODEL_GENERATION_PROMPT = """
Help me convert my DataModel from a closed QA task to the task described below.

Task: {user_task}

Here are the contextual tags and attributes generated from the dataset description:

```yaml
{tags_yaml}
```

Use these tags and attributes to inform the data model definition.

Here are some important guidelines for generating a valid DataModel:

1. **Fields and Attributes**:
   - Create an absolute maximum of 4 fields.
   - Each `DataField` represents a field in the data model. For this task, focus on generating **non-categorical**, **non-numeric** fields that are better suited to natural language generation by LLMs.
   - Avoid using fields that are primarily categorical (e.g., a list of predefined options) or numeric (e.g., integers, floats). These types of fields can be generated via other methods and do not require the LLM's contextually rich outputs.
   - Text-based fields should have descriptions that require context or complex relationships to be effectively generated by the LLM.

   For each field, you should include the following attributes:
     - `name`: The name of the field.
     - `type`: The data type of the field, preferably `str` for text-based fields.
     - `description`: A brief explanation of the field's purpose, focusing on the context-rich nature of the data that LLMs excel at generating.

2. **Generation Instructions**:
   - The `generation_instructions` should guide the data generation process and emphasize the generation of rich, context-sensitive text fields.
   - Avoid generating categorical or numeric data, as those fields are better handled by other data generation techniques.

3. **Static Fields**:
   - Include the following static fields in your output:
     api_key: prompt
     data_source: null
     evol_generations: 1
     llm_model: gretelai/gpt-auto
     log_level: INFO
     num_examples: 1000
     use_reflection: true
   - Set the `output_prefix` field to a relevant value based on the task.

Here's a sample DataModel in YAML format:

{example_yaml}

Please provide a new DataModel in YAML format that is adapted for the new task. Ensure that the YAML is valid, follows the same structure as the example, and adheres to the guidelines provided.
"""
